<launch>
  <arg name="kinova_robotType" default="j2s6s200"/>
  <arg name="kinova_robotName" default="$(arg kinova_robotType)"/>  
  <arg name="use_trajectory_controller" default="true"/>
  <arg name="is7dof" default="false"/>
  <arg name="has2finger" default="false"/><!-- if false: 3 finger, true: 2 finger -->
  <arg name="description_name" default="robot_description"/><!-- allows remapping of robot_description into a namespace -->

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <!-- <rosparam file="$(find kinova_control)/config/$(arg kinova_robotName)_control.yaml" command="load"/> -->

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find effort_feedforward_with_joint_feedback_controller)/config/j2s6s200_control.yaml" command="load" ns="$(arg kinova_robotName)"/>
  <!-- load the controllers -->
  <node name="j2s6s200_control_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="j2s6s200_control finger_1_position_controller finger_2_position_controller finger_tip_1_position_controller finger_tip_2_position_controller joint_state_controller" ns="$(arg kinova_robotName)">
  <!-- <node name="j2s6s200_control_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="effort_joint_group_position_controller finger_1_position_controller finger_2_position_controller finger_tip_1_position_controller finger_tip_2_position_controller joint_state_controller" ns="$(arg kinova_robotName)"> -->
    <remap from="command" to="/anymal_highlevel_controller/command"/>
    <remap from="/j2s6s200/j2s6s200_control/command" to="/anymal_highlevel_controller/command"/>
    <remap from="robot_description" to="$(arg description_name)"/>
  </node>


  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="$(arg kinova_robotName)_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="true" output="screen">
    <remap from="/joint_states" to="/$(arg kinova_robotName)/joint_states"/>
    <remap from="robot_description" to="$(arg description_name)"/>
  </node>
  
  <!-- <node name="command_robot_home_pose" pkg="kinova_control" type="move_robot.py"
        respawn="false" output="screen" args="$(arg kinova_robotType)">       
  </node> -->
 
</launch>
